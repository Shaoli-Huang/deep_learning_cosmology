name: "DCAE"
layer{
    name: "input"
    type: "HDF5Data"
    top: "data"
    include {
        phase: TRAIN
    }
    
    hdf5_data_param{
        source: "train.txt"
        batch_size: 128 
    }
}
layer{
    name: "input"
    type: "HDF5Data"
    top: "data"
    include {
        phase: TEST
    }
    
    hdf5_data_param{
        source: "valid.txt"
        batch_size: 128 
    }
}
layer{
    name: "conv1"
    type: "Convolution"
    bottom: "data"
    top: "conv1"
    param{
        lr_mult: 0.05
    }
    convolution_param{
        num_output: 64
        pad: 2
        kernel_size: 5
        stride: 2
        weight_filler{
            type: "xavier"          
        }
        bias_filler{
            type: "constant"
        }        
    }
}
layer{
    name: "relu1"
    type: "ReLU"
    bottom: "conv1"
    top: "relu1"
}
    
layer{
    name: "conv2"
    type: "Convolution"
    bottom: "relu1"
    top: "conv2"
    param{
        lr_mult: 0.05
    }
    convolution_param{
        num_output: 64
        pad: 2
        kernel_size: 5
        stride: 2
        weight_filler{
            type: "xavier"
        }
        bias_filler{
            type: "constant"
        }        
    }
}
layer{
    name: "relu2"
    type: "ReLU"
    bottom: "conv2"
    top: "relu2"
}
layer{
    name: "conv3"
    type: "Convolution"
    bottom: "relu2"
    top: "conv3"
    param{
        lr_mult: 0.05
    }
    convolution_param{
        num_output: 128
        pad: 2
        kernel_size: 5
        stride: 2
        weight_filler{
            type: "xavier"
        }
        bias_filler{
            type: "constant"
        }        
    }
}
layer{
    name: "relu3"
    type: "ReLU"
    bottom: "conv3"
    top: "relu3"
}
layer{
    name: "conv4"
    type: "Convolution"
    bottom: "relu3"
    top: "conv4"
    param{
        lr_mult: 0.05
    }
    convolution_param{
        num_output: 128
        pad: 2
        kernel_size: 5
        stride: 2
        weight_filler{
            type: "xavier"
        }
        bias_filler{
            type: "constant"
        }        
    }
}
layer{
    name: "relu4"
    type: "ReLU"
    bottom: "conv4"
    top: "relu4"
}
layer{
    name: "ip1"
    type: "InnerProduct"
    bottom: "relu4"
    top: "ip1"
    param{
        lr_mult: 0.05
    }
    inner_product_param{
        num_output: 2048
        weight_filler{
            type: "uniform"
        }
        bias_filler{
            type: "constant"
        }
    }
}
layer{
    name: "ip2"
    type: "InnerProduct"
    bottom: "ip1"
    top: "ip2"
    param{
        lr_mult: 0.05
    }
    inner_product_param{
        num_output: 8192
        weight_filler{
            type: "uniform"
        }
        bias_filler{
            type: "constant"
        }
    }
}
layer{
    name: "reshape1"
    type: "Reshape"
    bottom: "ip2"
    top: "reshape1"
    reshape_param{
        shape{
            dim: 0
            dim: 128
            dim: 8
            dim: 8
        }
    }
}
layer{
    name: "deconv1"
    type: "Deconvolution"
    bottom: "reshape1"
    top: "deconv1"
    convolution_param{
        num_output: 128
        pad: 1
        stride: 2
        kernel_size: 4
        group: 1
    }
}
layer{
    name: "relu5"
    type: "ReLU"
    bottom: "deconv1"
    top: "relu5"
}
layer{
    name: "deconv2"
    type: "Deconvolution"
    bottom: "relu5"
    top: "deconv2"
    convolution_param{
        num_output: 64
        pad: 1
        stride: 2
        kernel_size: 4
        group: 1
    }
}
layer{
    name: "relu6"
    type: "ReLU"
    bottom: "deconv2"
    top: "relu6"
}
layer{
    name: "deconv3"
    type: "Deconvolution"
    bottom: "relu6"
    top: "deconv3"
    convolution_param{
        num_output: 64
        pad: 1
        stride: 2
        kernel_size: 4
        group: 1
    }
}
layer{
    name: "relu7"
    type: "ReLU"
    bottom: "deconv3"
    top: "relu7"
}
layer{
    name: "deconv4"
    type: "Deconvolution"
    bottom: "relu7"
    top: "deconv4"
    convolution_param{
        num_output: 1
        pad: 1
        stride: 2
        kernel_size: 4
        group: 1
    }
}
layer{
    name: "deconvflat"
    type: "Flatten" 
    bottom: "deconv4"
    top: "deconv4flat"
}
layer{
    name: "deconvflat"
    type: "Flatten" 
    bottom: "data"
    top: "dataflat"
}
layer{
    name: "loss"
    type: "EuclideanLoss"
    bottom: "deconv4flat"
    bottom: "dataflat"
    top: "loss"
}
